{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/components/recipe-list/recipe-list.component.css","webpack:///./src/app/components/recipe-list/recipe-list.component.html","webpack:///./src/app/components/recipe-list/recipe-list.component.ts","webpack:///./src/app/components/recipe-summary/recipe-summary.component.css","webpack:///./src/app/components/recipe-summary/recipe-summary.component.html","webpack:///./src/app/components/recipe-summary/recipe-summary.component.ts","webpack:///./src/app/model/recipe.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \".newrecipe{\\r\\n    margin: 10px;\\r\\n    width: 700px;\\r\\n}\\r\\n\\r\\ndiv.input-group{\\r\\n    margin: 10px 0;\\r\\n}\\r\\n\\r\\ndiv textarea{\\r\\n    width:600px;\\r\\n}\"","module.exports = \"<app-recipe-list></app-recipe-list>\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n }\n\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { FormsModule } from '@angular/forms';\nimport { AppComponent } from './app.component';\nimport { RecipeListComponent } from './components/recipe-list/recipe-list.component';\nimport { RecipeSummaryComponent } from './components/recipe-summary/recipe-summary.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    RecipeSummaryComponent,\n    RecipeListComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"h1{\\r\\n    font-size: 160%;\\r\\n}\\r\\n\\r\\n.dark_bg{\\r\\n    background-color: #aaaaaa;\\r\\n    font-size: 150%;\\r\\n}\"","module.exports = \"<h1 [ngStyle]=\\\"current_styles\\\">These are our recipes.</h1>\\n<div >\\n  <input type=\\\"button\\\" value=\\\"Toggle Font size\\\" (click)=\\\"toggleFont()\\\">\\n  <input type=\\\"button\\\" value=\\\"Toggle Background\\\" (click)=\\\"toggleBackground()\\\">\\n</div>\\n\\n<app-recipe-summary *ngFor=\\\"let recipe of recipes\\\" \\n[dark_back] = \\\"dark_background\\\"\\n[recipe]=\\\" recipe \\\" (zoomIn)=\\\"zoomClicked(recipe)\\\"> //if zoomIn event is fired.\\n</app-recipe-summary>\\n<div style=\\\"clear:both\\\">\\n  <div class=\\\"panel panel-default\\\">\\n    <div class=\\\"panel-heading\\\">\\n      <h4>Add new recipe</h4>\\n    </div>\\n    <div class=\\\"panel-body\\\">\\n      <div class=\\\"input-group\\\">\\n        <input type=\\\"text\\\" [(ngModel)]=\\\"recipe_in_progress.title\\\" class=\\\"form-control\\\" name=\\\"title\\\" placeholder=\\\"Recipe Title\\\" />\\n      </div>\\n      <div class=\\\"input-group\\\">\\n        <textarea row=\\\"5\\\" [(ngModel)]=\\\"recipe_in_progress.description\\\" class=\\\"form-control\\\" placeholder=\\\"Description\\\" name=\\\"description\\\"></textarea>\\n      </div>\\n      <div class=\\\"input-group\\\">\\n        <input type=\\\"text\\\" [(ngModel)]=\\\"recipe_in_progress.feeds_this_many\\\" class=\\\"form-control\\\" placeholder=\\\"Feeds this many\\\" name=\\\"feeds_this_many\\\"\\n        />\\n        <span class=\\\"input-group-addon\\\">people</span>\\n      </div>\\n      <div class=\\\"input-group\\\">\\n        <input type=\\\"text\\\" [(ngModel)]=\\\"recipe_in_progress.preparation_time\\\" class=\\\"form-control\\\" placeholder=\\\"Time taken to prepare\\\"\\n          name=\\\"preparation_time\\\" />\\n        <span class=\\\"input-group-addon\\\">minutes</span>\\n      </div>\\n      <div class=\\\"input-group\\\">\\n        <input type=\\\"button\\\" value=\\\"Add Recipe\\\" (click)=\\\"addRecipeClicked()\\\" />\\n      </div>\\n\\n    </div>\\n  </div>\\n\\n</div>\\n\\n<div>\\n  <button class=\\\"input-group\\\" (click)=\\\"removeRecipe()\\\">Delete recipe</button>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { Recipe } from '../../model/recipe';\nimport { JsonPipe } from '../../../../node_modules/@angular/common';\n\n@Component({\n  selector: 'app-recipe-list',\n  templateUrl: './recipe-list.component.html',\n  styleUrls: ['./recipe-list.component.css']\n})\nexport class RecipeListComponent {\n\n  recipes: Recipe[];\n  recipe_in_progress: Recipe;\n  dark_background: Boolean;\n  current_styles: any = { 'font-size': '150%' };\n\n  public addRecipeClicked() {\n    console.log('addRecipeClicked');\n    this.recipes.unshift(this.recipe_in_progress);\n    this.recipe_in_progress = Recipe.inputRecipe();\n  }\n\n  public removeRecipe() {\n    this.recipes.pop();\n  }\n\n  public zoomClicked(recipe: Recipe) {\n    console.log('ZoomIn clicked');\n    console.log(JSON.stringify(recipe, null, 2));\n  }\n\n  constructor() {\n\n    this.recipe_in_progress = Recipe.inputRecipe();\n    this.dark_background = false;\n    this.recipes = [\n      (new Recipe('Dosa',\n        'South Indian Roti: It\\'s very delicious', 3, 50,\n        null, null, null)),\n      new Recipe('Pav Bhaji', 'Punjabi Dish: It\\'s very very tasty', 3, 40,\n        null, null, null),\n      (new Recipe('Kaju Kari', 'Consists of cashewnuts and gravy', 4, 30,\n        null, null, null))\n    ]\n      ;\n  }\n\n  public toggleFont() {\n\n    if (this.current_styles['font-size'] === '150%') {\n      this.current_styles['font-size'] = '175%';\n    } else {\n      this.current_styles['font-size'] = '150%';\n    }\n  }\n\n  public toggleBackground() {\n      this.dark_background = !this.dark_background;\n  }\n\n\n}\n","module.exports = \"div.cover-photo-holder img {\\r\\n  width: 150px;\\r\\n  height: 150px;\\r\\n  margin: 5px;\\r\\n  float: right;\\r\\n}\\r\\n\\r\\n.recipe {\\r\\n  background-color: #bbbb;\\r\\n  float: left;\\r\\n  width: 97%;\\r\\n  margin: 10px ;\\r\\n  max-width: 500px;\\r\\n}\\r\\n\\r\\n.dark_background {\\r\\n  float: left;\\r\\n  width: 97%;\\r\\n  margin: 10px;\\r\\n  max-width: 500px;\\r\\n  background-color: #aaa;\\r\\n}\\r\\n\\r\\n@media (min-width: 1024px) {\\r\\n  .recipe {\\r\\n    width: 500px;\\r\\n    margin: 10px ;\\r\\n  }\\r\\n  .dark_background {\\r\\n    width: 500px;\\r\\n    margin: 10px ;\\r\\n  }\\r\\n}\\r\\n\"","module.exports = \"<div [ngStyle]='current_styles' [ngClass]='dark_back?\\\"recipe panel panel-default\\\":\\\"dark_background panel panel-default\\\"'\\n >\\n\\n  <div class=\\\"panel-heading\\\" >\\n    <h3 class=\\\"panel-title\\\">{{ recipe.title }}</h3>\\n  </div>\\n  <div class=\\\"panel-body\\\">\\n    <p>{{ recipe.description }}</p>\\n    <div class=\\\" cover-photo-holder \\\" style=\\\"float:right\\\">\\n      <img src=\\\"{{ recipe.cover_photo?recipe.cover_photo:'../assets/empty-bowl.png'}}\\\" style=\\\"width: 150px; height: 150px; margin: 6px\\\"\\n      />\\n    </div>\\n    <div style=\\\"font-weight: bold; float: left; width: 150px\\\">Preparation Time: </div>\\n    <div>{{recipe.preparation_time}} minutes</div>\\n    <div style=\\\"font-weight: bold; width: 150px\\\">For {{recipe.feeds_this_many}} people</div>\\n  </div>\\n\\n  <div style=\\\"font-size: 75%; cursor:pointer; \\\" (click)=\\\"zoomInClicked()\\\">Zoom</div>\\n\\n</div>\\n\"","import { Component, Input, Output } from '@angular/core';\nimport { Recipe } from '../../model/recipe';\nimport { EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'app-recipe-summary',\n  templateUrl: './recipe-summary.component.html',\n  styleUrls: ['./recipe-summary.component.css']\n})\n\nexport class RecipeSummaryComponent {\n\n  @Input()\n  recipe: Recipe;\n  @Input()\n  dark_back: boolean;\n\n  current_styles: any;\n\n  @Output()\n  zoomIn: EventEmitter<Recipe> = new EventEmitter();\n\n  public zoomInClicked() {\n    this.zoomIn.emit(this.recipe);\n    console.log(this.dark_back);\n    if (this.current_styles['font-size'] === '100%') {\n      this.current_styles = { 'font-size': '150%' };\n    } else {\n      this.current_styles['font-size'] = '100%';\n    }\n  }\n\n  constructor() {\n    this.dark_back = false;\n    this.current_styles = { 'font-size': '100%' };\n  }\n\n\n\n\n\n}\n","import { Ingredient } from './ingredient';\r\nimport { Instruction } from './instruction';\r\n\r\nexport class Recipe {\r\n    public title: string;\r\n    public description: string;\r\n    public feeds_this_many: number; // people\r\n    public preparation_time: number; // minutes\r\n    public ingredients: Ingredient[];\r\n    public instructions: Instruction[];\r\n    public cover_photo: string;\r\n\r\n    public static inputRecipe(): Recipe {\r\n        return new Recipe('', '', 1, 1, null, null, null);\r\n    }\r\n\r\n\r\n\r\n    constructor(t: string, d: string, ftm: number, pt: number, ingr: Ingredient[], instr: Instruction[], cp: string) {\r\n        this.title = t;\r\n        this.description = d;\r\n        this.feeds_this_many = ftm;\r\n        this.preparation_time = pt;\r\n        this.ingredients = ingr;\r\n        this.instructions = instr;\r\n        this.cover_photo = cp;\r\n    }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}